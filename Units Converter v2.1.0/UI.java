
/**
 * The user interface for the Units Converter.
 * The user interface is used to input the measurement amount, the units of said
 * amount, and the units to convert to. The user can convert between two 
 * imperial units, two metric units, from imperial to metric units, from 
 * metric to imperial units, and between temperature units.
 * A convert button performs the conversion. The converted measurement is then 
 * displayed. An error message can be displayed if the user tries to convert a 
 * negative length, mass, or volume; if the user tries to convert one type of 
 * unit to another (like from meters to liters); or if the user inputs a unit 
 * incorrectly (units must be spelled out, abbreviations are not allowed). 
 * A clear button clears the text fields and an exit button closes the program.
 * @author Carey Norslien
 */
public class UI extends javax.swing.JFrame {
   
   /**
    * Creates new form UI
    */
   public UI() {
      initComponents();
   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
   private void initComponents() {

      helpFrame = new javax.swing.JFrame();
      okButton = new javax.swing.JButton();
      helpText = new javax.swing.JLabel();
      clearButton = new javax.swing.JButton();
      exitButton = new javax.swing.JButton();
      conversionField = new javax.swing.JTextField();
      convertedField = new javax.swing.JTextField();
      convertButton = new javax.swing.JButton();
      convertFromLB = new javax.swing.JLabel();
      titleLB = new javax.swing.JLabel();
      answerLB = new javax.swing.JLabel();
      helpButton = new javax.swing.JButton();

      helpFrame.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
      helpFrame.setMaximumSize(new java.awt.Dimension(10000, 10000));
      helpFrame.setMinimumSize(new java.awt.Dimension(950, 525));
      helpFrame.setPreferredSize(new java.awt.Dimension(950, 525));
      helpFrame.setResizable(false);

      okButton.setText("OK");
      okButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            okButtonActionPerformed(evt);
         }
      });

      helpText.setText("<html>\n<p>Unit Converter 2.1.0</p>\n<p><b>OVERVIEW</b></p>\n<p>This program can convert many units of measurement to any other applicable unit.</p>\n<p></p>\n<p><b>FUNCTIONS</b></p>\n<p>Unit Conversion: Converts any non-negative quantity of a particular measurement to another. This functions uses the keyword \"to\" to convert an amount and its unit \nof</p> \n<p>measurement to another compatible measurement. </p>\n<p></p>\n<p>-Composite units like miles per gallon are allowed. Composite units use the additional keyword \"per\" or \"/\" If using \"/\", there must be spaces before and after</p> \n<p>the slash. </p>\n<p>-Abbreviations for single units like \"m\", \"kg\", and \"mi\" are allowed and may be used with periods like \"ft.\" Abbreviations for composite units are not yet \nsupported,</p>\n<p>but single unit abbreviations can be used instead, like \"m / s\".</p> \n<p>-Imperial and metric distances, volumes, masses, and areas, as well as temperatures, times, and digital storage are valid.</p> \n<p>-Input conversions like the following: 13.5 meters to inches, 67 lb to kg, 32 miles per gallon to kilometers per gallon, 189332.23 m / s to mi / hr, 78 Fahrenheit \nto</p>\n<p>Celsius.</p>\n<p></p>\n<p>Normal Time: Converts any time amount into \"normal time\", which breaks down the original amount into the smaller time units to perceive time like on a clock. \nThe</p> \n<p>original amount can be broken down into years, months, weeks, days, hours, minutes, and seconds. The keyword to use is \"in normal time\".</p>\n<p></p>\n<p>-Only time units are valid.</p>\n<p>-Input conversions like the following: 250 minutes in normal time, 18.25 years in normal time. </p>\n<p></p>\n<p><b>NOTES:</b></p>\n<p>-The accuracy of the conversions will be enough for most conversions, but for really specific applications, it may not be enough. </p>\n<p>-The digital storage like gigabytes and megabytes use base two amounts instead of the technically correct base ten amounts. However, since most people use the \nwrong</p>\n<p>prefixes, digital storage remains base two.</p>\n<p>-The imperial system is used, which is slightly different from the US system.</p>");

      javax.swing.GroupLayout helpFrameLayout = new javax.swing.GroupLayout(helpFrame.getContentPane());
      helpFrame.getContentPane().setLayout(helpFrameLayout);
      helpFrameLayout.setHorizontalGroup(
         helpFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, helpFrameLayout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(okButton)
            .addGap(405, 405, 405))
         .addGroup(helpFrameLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(helpText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );
      helpFrameLayout.setVerticalGroup(
         helpFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, helpFrameLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(helpText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(okButton)
            .addContainerGap())
      );

      setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
      setResizable(false);

      clearButton.setText("Clear");
      clearButton.setToolTipText("");
      clearButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            clearButtonActionPerformed(evt);
         }
      });

      exitButton.setText("Exit");
      exitButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            exitButtonActionPerformed(evt);
         }
      });

      conversionField.setToolTipText("<html>\n<p>Enter the desired conversion witht the keyword \"to\" to separate the original amount and the units to convert to.</p>\n<p>Use \"per\" or \"/\" for composite units like mpg. If using \"/\", use a space before and after \"/\".</p>\n<p></p>\n<p> For example:</p>\n<p>25 miles to kilometers\n<p> 16.3 ml to fl o\n<p> 78 Fahrenheit to Celsius\n<p> 2 GB to KB </p>\n<p></p>\n<p>Negative amounts other than temperatures are not allowed.</p>\n");
      conversionField.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            conversionFieldActionPerformed(evt);
         }
      });

      convertedField.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            convertedFieldActionPerformed(evt);
         }
      });

      convertButton.setText("Convert");
      convertButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            convertButtonActionPerformed(evt);
         }
      });

      convertFromLB.setText("Enter the conversion:");

      titleLB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
      titleLB.setText("Units Converter");

      answerLB.setText("The converted measurement:");

      helpButton.setText("Help");
      helpButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            helpButtonActionPerformed(evt);
         }
      });

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
               .addGroup(layout.createSequentialGroup()
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                           .addComponent(convertFromLB)
                           .addComponent(conversionField, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)))
                     .addGroup(layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(titleLB))
                     .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(convertedField, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)))
                  .addGap(0, 0, Short.MAX_VALUE))
               .addGroup(layout.createSequentialGroup()
                  .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(convertButton)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(clearButton)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(helpButton)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(exitButton)))
            .addContainerGap())
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(answerLB)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(titleLB)
            .addGap(18, 18, 18)
            .addComponent(convertFromLB)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(conversionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(answerLB)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(convertedField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(exitButton)
               .addComponent(clearButton)
               .addComponent(convertButton)
               .addComponent(helpButton))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );

      pack();
   }// </editor-fold>                        

   private void convertedFieldActionPerformed(java.awt.event.ActionEvent evt) {                                               
      // TODO add your handling code here:
   }                                              

   /**
    * Clears all text fields when the clear button is clicked on.
    * @param evt the clear button is clicked on
    */
   private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
      conversionField.setText(null);
      convertedField.setText(null);
   }                                           

   /**
    * Converts the measurement when the convert button is clicked on.
    * @param evt the convert button is clicked on
    */
   private void convertButtonActionPerformed(java.awt.event.ActionEvent evt) {                                              
      Converter converter = new Converter();
      
      converter.processInput(conversionField.getText());
      String finalAnswer = converter.convert();
      convertedField.setText(finalAnswer);
   }                                             

   /**
    * Exits the program when the exit button is clicked on.
    * @param evt  the exit button is clicked on
    */
   private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
      System.exit(0);
   }                                          

   private void conversionFieldActionPerformed(java.awt.event.ActionEvent evt) {                                                
      // TODO add your handling code here:
   }                                               

   private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
      helpFrame.setVisible(true);
      helpFrame.setLocation(250, 5);
   }                                          

   private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {                                         
      helpFrame.setVisible(false);
   }                                        

   /**
    * @param args the command line arguments
    */
   public static void main(String args[]) {
      /* Set the Nimbus look and feel */
      //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
       * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
       */
      try {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
               javax.swing.UIManager.setLookAndFeel(info.getClassName());
               break;
            }
         }
      } catch (ClassNotFoundException ex) {
         java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (InstantiationException ex) {
         java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (IllegalAccessException ex) {
         java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (javax.swing.UnsupportedLookAndFeelException ex) {
         java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      //</editor-fold>

      /* Create and display the form */
      java.awt.EventQueue.invokeLater(new Runnable() {
         public void run() {
            new UI().setVisible(true);
         }
      });
   }
   // Variables declaration - do not modify                     
   private javax.swing.JLabel answerLB;
   private javax.swing.JButton clearButton;
   private javax.swing.JTextField conversionField;
   private javax.swing.JButton convertButton;
   private javax.swing.JLabel convertFromLB;
   private javax.swing.JTextField convertedField;
   private javax.swing.JButton exitButton;
   private javax.swing.JButton helpButton;
   private javax.swing.JFrame helpFrame;
   private javax.swing.JLabel helpText;
   private javax.swing.JButton okButton;
   private javax.swing.JLabel titleLB;
   // End of variables declaration                   
}
